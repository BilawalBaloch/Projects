Here's a README.md file for your GitHub repository, based on the provided code and analysis:

-----

# Diwali Sales Analysis

This project performs an exploratory data analysis (EDA) on Diwali sales data to uncover insights into customer behavior, popular products, and sales trends. The analysis aims to help businesses understand their sales performance during the festive season and make data-driven decisions.

## Table of Contents

  - [Project Overview](https://www.google.com/search?q=%23project-overview)
  - [Dataset](https://www.google.com/search?q=%23dataset)
  - [Key Insights](https://www.google.com/search?q=%23key-insights)
  - [Technologies Used](https://www.google.com/search?q=%23technologies-used)
  - [Setup and Usage](https://www.google.com/search?q=%23setup-and-usage)
  - [Analysis Steps](https://www.google.com/search?q=%23analysis-steps)
  - [Visualizations](https://www.google.com/search?q=%23visualizations)
  - [Future Work](https://www.google.com/search?q=%23future-work)
  - [Contributing](https://www.google.com/search?q=%23contributing)
  - [License](https://www.google.com/search?q=%23license)

## Project Overview

The Diwali festival is a significant period for sales in India. This project analyzes sales data from a Diwali shopping event to:

  - Identify top-performing products and categories.
  - Understand customer demographics (age, gender, marital status, occupation) that drive sales.
  - Determine the states with the highest sales and order volumes.
  - Provide actionable insights for optimizing marketing strategies and inventory management for future festive seasons.

## Dataset

The dataset used for this analysis is `Diwali Sales Data.csv`. It contains information about individual sales transactions, including:

  - `User_ID`: Unique identifier for the customer.
  - `Cust_name`: Customer's name.
  - `Product_ID`: Unique identifier for the product.
  - `Gender`: Gender of the customer.
  - `Age Group`: Age category of the customer (e.g., 0-17, 18-25, 26-35).
  - `Age`: Exact age of the customer.
  - `Marital_Status`: Marital status of the customer.
  - `State`: State where the transaction occurred.
  - `Zone`: Geographical zone of the state.
  - `Occupation`: Occupation of the customer.
  - `Product_Category`: Category of the product.
  - `Orders`: Number of units ordered.
  - `Amount`: Total sales amount for the transaction.
  - `Status` & `unnamed1`: Columns identified as containing missing/null values, likely redundant.

## Key Insights

Based on the analysis, here are some key insights:

1.  **Gender-wise Sales:** Female customers contribute significantly more to sales revenue than male customers.

      * **Female Sales:** $74.43 million
      * **Male Sales:** $31.93 million

2.  **Age Group Spending:** The `26-35` age group, followed by `36-45` and `18-25`, are the highest spenders. This group likely represents young professionals and families.

3.  **Top Spending States:**

      * **Uttar Pradesh** leads in total sales amount and number of orders.
      * **Maharashtra** and **Karnataka** are also major contributors to sales.

4.  **Marital Status & Gender Impact:** Married women tend to have the highest purchasing power during Diwali sales.

5.  **Top Occupations:** Customers from the **IT Sector**, **Healthcare**, and **Aviation** occupations are the top spenders.

6.  **Top Product Categories:** The highest sales revenue comes from:

      * **Food**
      * **Clothing & Apparel**
      * **Electronics & Gadgets**

7.  **Most Ordered Products:** Specific Product IDs (e.g., P00265242, P00110942) have the highest number of orders, indicating high demand for these particular items.

## Technologies Used

  - **Python:** Programming language for data analysis.
  - **Pandas:** For data manipulation and analysis.
  - **NumPy:** For numerical operations.
  - **Matplotlib:** For basic plotting and customization.
  - **Seaborn:** For enhanced data visualization.

## Setup and Usage

1.  **Clone the repository:**

    ```bash
    git clone https://github.com/<your-username>/Diwali-Sales-Analysis.git
    cd Diwali-Sales-Analysis
    ```

2.  **Create a virtual environment (recommended):**

    ```bash
    python -m venv venv
    source venv/bin/activate  # On Windows: `venv\Scripts\activate`
    ```

3.  **Install the required libraries:**

    ```bash
    pip install pandas numpy matplotlib seaborn
    ```

4.  **Place the dataset:**
    Ensure `Diwali Sales Data.csv` is in the `/content/` directory relative to your script (or update the file path in the code). If running locally, place it in the same directory as your Python script/Jupyter notebook.

5.  **Run the Jupyter Notebook or Python script:**
    Open the Jupyter Notebook (`Diwali_Sales_Analysis.ipynb` - if you convert your script to one) or execute the Python script containing the analysis code.

    ```bash
    jupyter notebook
    # or
    python your_analysis_script_name.py
    ```

## Analysis Steps

The analysis involved the following steps:

1.  **Data Loading:** Reading the `Diwali Sales Data.csv` file.
2.  **Initial Data Inspection:**
      * Checking the first and last few rows (`.head()`, `.tail()`).
      * Getting summary statistics (`.describe()`).
      * Inspecting data types and non-null values (`.info()` - though not explicitly shown in your snippet, it's good practice).
3.  **Handling Missing Values:**
      * Identifying null values (`.isnull().sum()`).
      * Filling missing `Amount` values with the mean.
      * Dropping columns with all null values (`Status`, `unnamed1`).
4.  **Data Type Conversion:** Converting `Amount` and `Age` columns to integer type for consistency and accurate calculations.
5.  **Exploratory Data Analysis (EDA) and Visualization:**
      * **Gender Analysis:**
          * Count of males vs. females.
          * Total sales amount by gender.
      * **Age Group Analysis:**
          * Distribution of age groups by gender.
          * Total sales amount by age group.
      * **Marital Status Analysis:**
          * Count of marital statuses.
          * Total sales amount by marital status and gender.
      * **State-wise Analysis:**
          * Top 10 states by total sales amount.
          * Top 10 states by total orders.
      * **Occupation Analysis:**
          * Count of customers by occupation.
          * Total sales amount by occupation.
      * **Product Category Analysis:**
          * Count of products by category.
          * Top 10 product categories by total sales amount.
      * **Product ID Analysis:**
          * Top 10 products by total orders.

## Visualizations

The project utilizes various plots to illustrate insights:

  - `sns.heatmap(df.isnull())`: To visualize missing data.
  - `sns.barplot`: For comparing categorical data (e.g., sales by gender, age group, state, occupation, product category).
  - `sns.displot`: To show the distribution of age, segmented by gender.
  - `sns.countplot`: To show the frequency of categorical variables (e.g., gender, marital status, occupation, product category).
  - `df.groupby(...).plot(kind='bar')`: For visualizing top products by orders.

## Future Work

  - **Advanced Predictive Modeling:** Build machine learning models (e.g., regression for sales forecasting, classification for customer segmentation) to predict future sales or identify high-value customers.
  - **Customer Segmentation:** Perform clustering to segment customers based on their purchasing behavior, demographics, and other attributes for targeted marketing.
  - **Time Series Analysis:** If daily/hourly sales data is available, perform time series analysis to understand seasonality and trends.
  - **Product Recommendation System:** Develop a basic recommendation system based on popular products or customer purchase history.
  - **Interactive Dashboard:** Create an interactive dashboard (e.g., using Dash, Streamlit, or Tableau) to allow users to explore the data dynamically.

## Contributing

Feel free to fork this repository, make improvements, and submit pull requests. Any contributions are welcome\!

## License

This project is open-source and available under the [MIT License](https://www.google.com/search?q=LICENSE).

-----
